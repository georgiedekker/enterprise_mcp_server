services:
  # Database services
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: enterprise_mcp_server
    ports:
      - "5434:5432"  # Changed to 5433 on host to avoid conflict with local PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - workflow-system-network

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6378:6378"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - workflow-system-network
  
  # Enterprise MCP server (gateway version)
  enterprise-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: enterprise-mcp-server:latest
    container_name: enterprise-mcp-server
    ports:
      - "0.0.0.0:8033:8033"
    volumes:
      - ./src:/app/src
      - claude_auth:/root/.claude
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - HOST=0.0.0.0
      - PORT=8033
      - LOG_LEVEL=INFO
      - CORS_ALLOWED_ORIGINS=https://app.cursor.sh,https://cursor.sh,http://localhost:*,http://127.0.0.1:*
      - SKIP_SANDBOX=true
      - PYTHONUNBUFFERED=1
      - POSTGRES_HOST=postgres  # Use Docker network hostname
      - POSTGRES_PORT=5432      # Using default port inside container
      - POSTGRES_DB=enterprise_mcp_server
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_POOL_MIN_SIZE=2
      - POSTGRES_POOL_MAX_SIZE=10
      - REDIS_URL=redis://redis:6379
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8033/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - workflow-system-network

networks:
  workflow-system-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  claude_auth: